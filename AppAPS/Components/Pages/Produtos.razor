@page "/produtos"
@using AppAPS.Entities
@using AppAPS.Interfaces
@rendermode InteractiveServer

<PageTitle>Produtos</PageTitle>

<h1>Listagem de Produtos</h1>

<FluentCard Height="Auto" Style="padding: 10px;">
    <FluentStack VerticalAlignment="VerticalAlignment.Center" Style="padding-bottom: 4px;">
        <FluentButton Type="ButtonType.Button" OnClick="InvokeTelaCadastro" Appearance="Appearance.Accent">Novo</FluentButton>
        <FluentButton Type="ButtonType.Button" OnClick="ExcluirProdutos" Appearance="Appearance.Accent" BackgroundColor="red">Excluir</FluentButton>
    </FluentStack>

    <FluentDivider />

    <FluentDataGrid Items="@produtos" ShowHover="true" TGridItem="Produto">
        <SelectColumn TGridItem="Produto"
                      SelectMode="DataGridSelectMode.Multiple"
                      SelectFromEntireRow="true"
                      @bind-SelectedItems="@SelectedItems" />
        <PropertyColumn Width="100px" Property="@(p => p.Id)" Title="Id" />
        @* <TemplateColumn Title="Avatar" Align="Align.Start">
        @if (@context.NomeArquivoUpload is not null)
        {
        <FluentPersona ImageSize="40px" StatusSize="PresenceBadgeSize.Medium"  Style="object-fit: fill !important;" Image="@context.NomeArquivoUpload" />
        }
        else
        {
        <FluentPersona ImageSize="40px" Initials="@context!.Nome[0]!.ToString().ToUpper()" />
        }
        </TemplateColumn> *@
        <PropertyColumn Width="300px" Property="@(p => p.Nome)" />
        <PropertyColumn Width="300px" Property="@(p => p.Descricao)" />
        <TemplateColumn Title="É ingrediente">
            <FluentCheckbox style="pointer-events:none;" @bind-Checked="@context.Ingrediente"></FluentCheckbox>
        </TemplateColumn>
    </FluentDataGrid>
</FluentCard>


@code {
    [Inject] private IProdutoService produtoService { get; set; }
    public IEnumerable<Produto> SelectedItems = new List<Produto>();
    public IQueryable<Produto>? produtos;

    protected override Task OnInitializedAsync()
    {
        produtos = produtoService.GetAllProdutos().AsQueryable();
        return Task.CompletedTask;
    }

    private async void InvokeTelaCadastro()
    {
        _navigationManager.NavigateTo("/cadastroProduto");
    }

    private async void ExcluirProdutos()
    {
        bool sucesso = produtoService.DeletarProdutos(SelectedItems.ToList());
        if (sucesso)
        {
            ToastService.ShowSuccess("Exclusão bem sucedida.");
            produtos = produtoService.GetAllProdutos().AsQueryable();
        }
    }
}
