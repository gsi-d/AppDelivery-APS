@using AppAPS.Entities
@using AppAPS.Services.Model
@inherits LayoutComponentBase


<FluentLayout>

    <FluentDialogProvider @rendermode="@InteractiveServer" />
    <FluentToastProvider @rendermode="@InteractiveServer" />

    <FluentHeader Style="position: fixed; width: 100vw">
        AppAPS
        
    </FluentHeader>
    <FluentStack Class="main" Style="margin-top: 15px" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu />
        <FluentBodyContent Style="background-color: whitesmoke; margin-top: 35px;" Class="body-content">
            <div class="content" style="height: 95vh">
                @Body
            </div>
        </FluentBodyContent>
    </FluentStack>
@*     <FluentFooter>
        <a href="https://www.fluentui-blazor.net" target="_blank">Documentation and demos</a>
        <FluentSpacer />
        <a href="https://learn.microsoft.com/en-us/aspnet/core/blazor" target="_blank">About Blazor</a>
    </FluentFooter> *@
</FluentLayout>

@code{
    [Inject] private SessaoUsuario sessaoUsuario { get; set; }
    private List<EnumItem<TipoUsuario>> TiposUsuario;
    private string? SelectedTipoUsuario = "";

    protected async override Task OnInitializedAsync()
    {
        TiposUsuario = EnumHelper.GetEnumItems<TipoUsuario>();
        OnTipoUsuarioChanged(EnumHelper.GetEnumDescription(TipoUsuario.Cliente));
    }

    private void OnTipoUsuarioChanged(string selectedValue)
    {
        sessaoUsuario.TipoUsuario = TiposUsuario.FirstOrDefault(item => item.Description == selectedValue)?.Value ?? sessaoUsuario.TipoUsuario;
    }
}
